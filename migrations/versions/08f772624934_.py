"""empty message

Revision ID: 08f772624934
Revises: 
Create Date: 2021-02-15 22:42:46.221301

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '08f772624934'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('audit_log',
    sa.Column('id', sa.String(length=32), nullable=False),
    sa.Column('ts', sa.DateTime(), nullable=True),
    sa.Column('event', sa.String(length=20), nullable=True),
    sa.Column('category', sa.String(length=50), nullable=True),
    sa.Column('message', sa.String(length=200), nullable=True),
    sa.Column('ip', sa.String(length=16), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_audit_log_event'), 'audit_log', ['event'], unique=False)
    op.create_index(op.f('ix_audit_log_user_id'), 'audit_log', ['user_id'], unique=False)
    op.create_table('background',
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=164), nullable=True),
    sa.Column('location', sa.String(length=300), nullable=True),
    sa.Column('brandCode', sa.String(length=10), nullable=True),
    sa.Column('created_by_fk', sa.Integer(), nullable=True),
    sa.Column('updated_by_fk', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('brand',
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=164), nullable=True),
    sa.Column('code', sa.String(length=10), nullable=True),
    sa.Column('location', sa.String(length=300), nullable=True),
    sa.Column('created_by_fk', sa.Integer(), nullable=True),
    sa.Column('updated_by_fk', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('category',
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=50), nullable=True),
    sa.Column('group', sa.String(length=50), nullable=True),
    sa.Column('code', sa.String(length=3), nullable=True),
    sa.Column('created_by_fk', sa.Integer(), nullable=True),
    sa.Column('updated_by_fk', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('department',
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=164), nullable=True),
    sa.Column('default', sa.Boolean(), nullable=True),
    sa.Column('bases_test_quota', sa.Integer(), nullable=True),
    sa.Column('pred_idea_quota', sa.Integer(), nullable=True),
    sa.Column('created_by_fk', sa.Integer(), nullable=True),
    sa.Column('updated_by_fk', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_department_default'), 'department', ['default'], unique=False)
    op.create_table('idea',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=64), nullable=True),
    sa.Column('description', sa.String(length=64), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('learn',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=64), nullable=True),
    sa.Column('description', sa.String(length=64), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('name_table',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=64), nullable=True),
    sa.Column('name_type', sa.String(length=64), nullable=True),
    sa.Column('description', sa.String(length=64), nullable=True),
    sa.Column('creat_time', sa.DateTime(), nullable=True),
    sa.Column('update_time', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('packing',
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=164), nullable=True),
    sa.Column('location', sa.String(length=300), nullable=True),
    sa.Column('brandCode', sa.String(length=10), nullable=True),
    sa.Column('created_by_fk', sa.Integer(), nullable=True),
    sa.Column('updated_by_fk', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('role',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=164), nullable=True),
    sa.Column('default', sa.Boolean(), nullable=True),
    sa.Column('permissions', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_role_default'), 'role', ['default'], unique=False)
    op.create_table('tag',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('label', sa.String(length=64), nullable=True),
    sa.Column('label_type', sa.String(length=64), nullable=True),
    sa.Column('description', sa.String(length=164), nullable=True),
    sa.Column('create_time', sa.DateTime(), nullable=True),
    sa.Column('update_time', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('type_table',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=64), nullable=True),
    sa.Column('name_type', sa.String(length=64), nullable=True),
    sa.Column('description', sa.String(length=64), nullable=True),
    sa.Column('creat_time', sa.DateTime(), nullable=True),
    sa.Column('update_time', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('activities',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('active', sa.String(length=64), nullable=True),
    sa.Column('active_type', sa.String(length=64), nullable=True),
    sa.Column('active_time', sa.Integer(), nullable=True),
    sa.Column('active_object', sa.String(length=164), nullable=True),
    sa.Column('description', sa.String(length=164), nullable=True),
    sa.Column('image', sa.String(length=164), nullable=True),
    sa.Column('video', sa.String(length=164), nullable=True),
    sa.Column('idea_id', sa.Integer(), nullable=True),
    sa.Column('learn_id', sa.Integer(), nullable=True),
    sa.Column('create_time', sa.DateTime(), nullable=True),
    sa.Column('update_time', sa.DateTime(), nullable=True),
    sa.Column('is_delete', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['idea_id'], ['idea.id'], ),
    sa.ForeignKeyConstraint(['learn_id'], ['learn.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('department_category',
    sa.Column('department_id', sa.Integer(), nullable=False),
    sa.Column('category_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['category_id'], ['category.id'], ),
    sa.ForeignKeyConstraint(['department_id'], ['department.id'], ),
    sa.PrimaryKeyConstraint('department_id', 'category_id')
    )
    op.create_table('idea_lab',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('idea_id', sa.Integer(), nullable=True),
    sa.Column('tag_id', sa.Integer(), nullable=True),
    sa.Column('creat_time', sa.DateTime(), nullable=True),
    sa.Column('update_time', sa.DateTime(), nullable=True),
    sa.Column('is_delete', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['idea_id'], ['idea.id'], ),
    sa.ForeignKeyConstraint(['tag_id'], ['tag.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('idea_name',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('idea_id', sa.Integer(), nullable=True),
    sa.Column('name_id', sa.Integer(), nullable=True),
    sa.Column('creat_time', sa.DateTime(), nullable=True),
    sa.Column('update_time', sa.DateTime(), nullable=True),
    sa.Column('is_delete', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['idea_id'], ['idea.id'], ),
    sa.ForeignKeyConstraint(['name_id'], ['name_table.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('idea_type',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('idea_id', sa.Integer(), nullable=True),
    sa.Column('type_id', sa.Integer(), nullable=True),
    sa.Column('creat_time', sa.DateTime(), nullable=True),
    sa.Column('update_time', sa.DateTime(), nullable=True),
    sa.Column('is_delete', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['idea_id'], ['idea.id'], ),
    sa.ForeignKeyConstraint(['type_id'], ['type_table.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('learn_lab',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('idea_id', sa.Integer(), nullable=True),
    sa.Column('tag_id', sa.Integer(), nullable=True),
    sa.Column('creat_time', sa.DateTime(), nullable=True),
    sa.Column('update_time', sa.DateTime(), nullable=True),
    sa.Column('is_delete', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['idea_id'], ['idea.id'], ),
    sa.ForeignKeyConstraint(['tag_id'], ['tag.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('learn_name',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('idea_id', sa.Integer(), nullable=True),
    sa.Column('name_id', sa.Integer(), nullable=True),
    sa.Column('creat_time', sa.DateTime(), nullable=True),
    sa.Column('update_time', sa.DateTime(), nullable=True),
    sa.Column('is_delete', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['idea_id'], ['idea.id'], ),
    sa.ForeignKeyConstraint(['name_id'], ['name_table.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('learn_type',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('idea_id', sa.Integer(), nullable=True),
    sa.Column('type_id', sa.Integer(), nullable=True),
    sa.Column('creat_time', sa.DateTime(), nullable=True),
    sa.Column('update_time', sa.DateTime(), nullable=True),
    sa.Column('is_delete', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['idea_id'], ['idea.id'], ),
    sa.ForeignKeyConstraint(['type_id'], ['type_table.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('user',
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('number', sa.Integer(), nullable=True),
    sa.Column('name', sa.String(length=32), nullable=False),
    sa.Column('creat_time', sa.DateTime(), nullable=True),
    sa.Column('update_time', sa.DateTime(), nullable=True),
    sa.Column('is_delete', sa.Integer(), nullable=True),
    sa.Column('role_id', sa.Integer(), nullable=False),
    sa.Column('department_id', sa.Integer(), nullable=False),
    sa.Column('email', sa.String(length=80), nullable=False),
    sa.Column('password', sa.String(length=255), nullable=False),
    sa.Column('active', sa.Boolean(), nullable=True),
    sa.Column('is_supervisor', sa.Boolean(), nullable=False),
    sa.Column('is_adal', sa.Boolean(), nullable=False),
    sa.Column('created_by_fk', sa.Integer(), nullable=True),
    sa.Column('updated_by_fk', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['department_id'], ['department.id'], ),
    sa.ForeignKeyConstraint(['role_id'], ['role.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('name')
    )
    op.create_table('guestbook',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('type', sa.String(length=32), nullable=True),
    sa.Column('description', sa.String(length=32), nullable=True),
    sa.Column('time', sa.DateTime(), nullable=True),
    sa.Column('state', sa.String(length=32), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('praise',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('type', sa.Integer(), nullable=True),
    sa.Column('work_id', sa.Integer(), nullable=True),
    sa.Column('is_give', sa.Integer(), nullable=True),
    sa.Column('time', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['type'], ['type_table.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('token_blacklist',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('jti', sa.String(length=36), nullable=False),
    sa.Column('token_type', sa.String(length=10), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('revoked', sa.Boolean(), nullable=False),
    sa.Column('expires', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('jti')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('token_blacklist')
    op.drop_table('praise')
    op.drop_table('guestbook')
    op.drop_table('user')
    op.drop_table('learn_type')
    op.drop_table('learn_name')
    op.drop_table('learn_lab')
    op.drop_table('idea_type')
    op.drop_table('idea_name')
    op.drop_table('idea_lab')
    op.drop_table('department_category')
    op.drop_table('activities')
    op.drop_table('type_table')
    op.drop_table('tag')
    op.drop_index(op.f('ix_role_default'), table_name='role')
    op.drop_table('role')
    op.drop_table('packing')
    op.drop_table('name_table')
    op.drop_table('learn')
    op.drop_table('idea')
    op.drop_index(op.f('ix_department_default'), table_name='department')
    op.drop_table('department')
    op.drop_table('category')
    op.drop_table('brand')
    op.drop_table('background')
    op.drop_index(op.f('ix_audit_log_user_id'), table_name='audit_log')
    op.drop_index(op.f('ix_audit_log_event'), table_name='audit_log')
    op.drop_table('audit_log')
    # ### end Alembic commands ###
